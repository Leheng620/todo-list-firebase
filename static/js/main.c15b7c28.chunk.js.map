{"version":3,"sources":["serviceWorker.js","config/firebaseConfig.js","store/actions/actionCreators.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","components/navbar/LoggedInLinks.js","store/database/asynchHandler.js","components/navbar/LoggedOutLinks.js","components/navbar/Navbar.js","components/register_screen/RegisterScreen.js","components/login_screen/LoginScreen.js","components/home_screen/TodoListCard.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/ItemCard.js","components/list_screen/ItemsList.js","components/list_screen/ListScreen.js","test/DatabaseTester.js","components/item_screen/ItemScreen.js","App.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","registerSuccess","type","registerError","error","logoutSuccess","initState","authReducer","state","action","authError","err","message","todoLists","todoListReducer","todoList","rootReducer","combineReducers","auth","firestore","firestoreReducer","firebaseReducer","LoggedInLinks","handleLogout","props","signOut","profile","this","className","to","onClick","initials","React","Component","compose","firebaseConnect","connect","dispatch","getState","then","actionCreators","logoutHandler","LoggedOutLinks","Navbar","links","uid","RegisterScreen","email","password","firstName","lastName","handleChange","e","target","setState","id","value","handleSubmit","preventDefault","newUser","register","onSubmit","htmlFor","name","onChange","getFirestore","createUserWithEmailAndPassword","resp","collection","doc","user","set","catch","registerHandler","LoginScreen","authData","credentials","login","signInWithEmailAndPassword","console","log","loginHandler","TodoListCard","TodoListLinks","map","key","ordered","HomeScreen","handleNewList","add","items","owner","visited","history","push","pathname","dis","style","paddingTop","waves","large","height","firestoreConnect","orderBy","ItemCard","showCompleted","isCompleted","position","left","top","buildDisableUpButton","item","up","disabled","buildDisableDownButton","length","down","fixKey","list","i","index","splice","update","delete","overflow","description","fontWeight","assigned_to","due_date","completed","ItemSortCriteria","ItemsList","sortTasks","sortingCriteria","currentItemSortCriteria","sort","compare","isCurrentItemSortCriteria","testCriteria","item1","item2","temp","sortByTask","sortByDuedate","sortByStatus","fontSize","cursor","ownProps","ListScreen","moveListToTop","orderedTodo","onChangeName","onChangeOwner","createNewItem","goBack","width","lineHeight","header","trigger","floating","Fragment","params","data","DatabaseTester","handleClear","fireStore","get","querySnapshot","forEach","handleReset","todoJson","todoListJson","ItemScreen","handleCancel","document","getElementById","checked","activeLabel","content","defaultValue","defaultChecked","marginRight","App","isLoaded","basename","exact","path","component","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render"],"mappings":"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","file":"static/js/main.c15b7c28.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\r\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAE92dh5rIZlpoLW1ZiaxAQYQexH9Paq8s\",\r\n    authDomain: \"todo-hw3-d95a3.firebaseapp.com\",\r\n    databaseURL: \"https://todo-hw3-d95a3.firebaseio.com\",\r\n    projectId: \"todo-hw3-d95a3\",\r\n    storageBucket: \"todo-hw3-d95a3.appspot.com\",\r\n    messagingSenderId: \"942465384196\",\r\n    appId: \"1:942465384196:web:da9346a794ca8f766c5a51\",\r\n    measurementId: \"G-HMB7DQ6L5K\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\r\nexport default firebase;","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\r\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\r\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\r\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\r\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\r\n// REDUCER, WHICH ADVANCES STATE\r\n\r\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\n\r\nexport const CREATE_TODO_LIST = 'CREATE_TODO_LIST';\r\n\r\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\r\n\r\nexport function registerSuccess() {\r\n    return { type: 'REGISTER_SUCCESS' }\r\n};\r\nexport function registerError(error) { \r\n    return { type: 'REGISTER_ERROR', error }\r\n};\r\nexport function loginSuccess() {\r\n    return { type: 'LOGIN_SUCCESS' }\r\n};\r\nexport function loginError(error) {\r\n    return { type: 'LOGIN_ERROR', error }\r\n};\r\nexport function logoutSuccess() {\r\n    return { type: 'LOGOUT_SUCCESS' }\r\n};\r\n\r\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\r\nexport function createTodoList(todoList) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST',\r\n        todoList\r\n    }\r\n}\r\nexport function createTodoListError(error) {\r\n    return {\r\n        type: 'CREATE_TODO_LIST_ERROR',\r\n        error\r\n    }\r\n}\r\nexport function test(todoLists){\r\n    return{\r\n        type: 'test',\r\n        todoLists\r\n    }\r\n}","import * as actionCreators from '../actions/actionCreators'\r\n\r\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\r\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\r\n// AND RETURN THE NEW, UPDATED STATE\r\n\r\nconst initState = {};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case actionCreators.LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: 'Login fail',\r\n      };\r\n    case actionCreators.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case actionCreators.LOGOUT_SUCCESS:\r\n      return state;\r\n    case actionCreators.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case actionCreators.REGISTER_ERROR:\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import * as actionCreators from '../actions/actionCreators'\r\n\r\n\r\nconst initState = {\r\n    todoLists: []\r\n};\r\n\r\nconst todoListReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \r\n        case actionCreators.CREATE_TODO_LIST:\r\n            return{\r\n                ...state,\r\n                todoLists: [...state.todoLists, action.todoList]\r\n            };\r\n        case 'test':\r\n            return{\r\n                ...state,\r\n                todoLists: action.todoLists\r\n            };\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n};\r\n\r\nexport default todoListReducer;","import { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from './authReducer';\r\nimport todoListReducer from './todoListReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  todoList: todoListReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { logoutHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoggedInLinks extends React.Component {\r\n\r\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\r\n  handleLogout = () => {\r\n    const { firebase } = this.props;\r\n    this.props.signOut(firebase);\r\n  }\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ul className=\"right\">\r\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li> {/* I left NavLink instead of anchor tag because I'm using airbnb eslint rules */}\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: firebase => dispatch(logoutHandler(firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(null, mapDispatchToProps),\r\n)(LoggedInLinks);","import * as actionCreators from '../actions/actionCreators.js'\r\n\r\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\r\n    firebase.auth().signInWithEmailAndPassword( //Return promise object\r\n      credentials.email,\r\n      credentials.password,\r\n    ).then(() => {\r\n      console.log(\"LOGIN_SUCCESS\");\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'LOGIN_ERROR', err });\r\n    });\r\n  };\r\n\r\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\r\n    firebase.auth().signOut().then(() => {\r\n        dispatch(actionCreators.logoutSuccess);\r\n    });\r\n};\r\n\r\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email,\r\n        newUser.password,\r\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\r\n    })).then(() => {\r\n        dispatch(actionCreators.registerSuccess);\r\n    }).catch((err) => {\r\n        dispatch(actionCreators.registerError);\r\n    });\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass LoggedOutLinks extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className = \"right\" >\r\n        <li><NavLink to=\"/register\">Register</NavLink></li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggedOutLinks;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport LoggedInLinks from './LoggedInLinks';\r\nimport LoggedOutLinks from './LoggedOutLinks';\r\n\r\nclass Navbar extends React.Component {\r\n\r\n  render() {\r\n    const { auth, profile } = this.props;\r\n    const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\r\n\r\n    return (\r\n      <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"brand-logo\">@todo</Link>\r\n          {links}\r\n        </div>\r\n      </nav>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(Navbar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { registerHandler } from '../../store/database/asynchHandler'\r\n\r\nclass RegisterScreen extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n\r\n    props.register(newUser, firebase);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  authError: state.auth.authError,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(RegisterScreen);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { loginHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoginScreen extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { target } = e;\r\n\r\n    this.setState(state => ({\r\n      ...state,\r\n      [target.id]: target.value,\r\n    }));\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // As we use react-redux-firebas-v3 we need to pass firebase object to\r\n    // authActions to be authorized by using firebse.auth method\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const credentials = { ...state };\r\n    const authData = {\r\n      firebase,\r\n      credentials,\r\n    };\r\n\r\n    props.login(authData);\r\n  }\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <form onSubmit={this.handleSubmit} className=\"col s4 white\">\r\n            <h5 className=\"grey-text text-darken-3\">Login</h5>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input className=\"active\" type=\"email\" name=\"email\" id=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input className=\"active\" type=\"password\" name=\"password\" id=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n            <div className=\"input-field\">\r\n              <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n              {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"col s8 banner\">\r\n            @todo<br />\r\n            List Maker\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authError: state.auth.authError,\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: authData => dispatch(loginHandler(authData)),\r\n});\r\n\r\n// We need firebaseConnect function to provide to this component\r\n// firebase object with auth method.\r\n// You can find more information on the link below\r\n// http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(LoginScreen);","import React from 'react';\r\n\r\nclass TodoListCard extends React.Component {\r\n\r\n    render() {\r\n        const { todoList } = this.props;\r\n        console.log(\"TodoListCard, todoList.id: \" + todoList.id);\r\n        return (\r\n            <div className=\"card z-depth-0 todo-list-link\">\r\n                <div className=\"blue-grey card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title white-text\">{todoList.name}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TodoListCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport TodoListCard from './TodoListCard';\r\n\r\nclass TodoListLinks extends React.Component {\r\n    render() {\r\n        let todoLists = this.props.todoLists;\r\n        return (\r\n            <div className=\"todo-lists section\">\r\n                {todoLists && todoLists.map(todoList => (\r\n                    <Link to={'/todoList/' + todoList.id} key={todoList.id}>\r\n                        <TodoListCard todoList={todoList} />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todoLists: state.firestore.ordered.todoLists,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps))(TodoListLinks);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport TodoListLinks from './TodoListLinks'\r\nimport {Modal, Button} from 'react-materialize';\r\nimport uuid from 'uuid';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport * as actionCreators from '../../store/actions/actionCreators'\r\n\r\nclass HomeScreen extends Component {\r\n\r\n    handleNewList = () =>{\r\n        const fireStore = getFirestore();\r\n        let newTodo = {\r\n            items: [],\r\n            name: \"unknown\",\r\n            owner: \"unknown\",\r\n            visited: \"false\"\r\n        }\r\n        //this.props.dispatch(actionCreators.createTodoList(newTodo));\r\n        fireStore.collection('todoLists').add(newTodo).then(doc => {\r\n            this.props.history.push({pathname: '/todoList/'+doc.id})\r\n        });\r\n        //this.dis(todoLists);\r\n    }\r\n    dis = (todoLists) =>{\r\n        this.props.dispatch({type:'test',todoLists});\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.auth.uid) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n        this.dis(this.props.todoLists);\r\n        console.log('home render called')\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m4\">\r\n                        <TodoListLinks />\r\n                    </div>\r\n\r\n                    <div className=\"col s8\">\r\n                        <div className=\"banner\">\r\n                            @todo<br />\r\n                            List Maker\r\n                        </div>\r\n                        \r\n                        <div className=\"home_new_list_container\" style={{paddingTop:'5px'}}>\r\n                                <Button className=\"home_new_list_button\" waves=\"light\" large style={{height:'120px'}} onClick={this.handleNewList}>\r\n                                    Create a New To Do List\r\n                                </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        todoLists: state.firestore.ordered.todoLists\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'todoLists' ,orderBy: ['visited','desc']},\r\n    ]),\r\n)(HomeScreen);","import React from 'react';\r\nimport { Button,Icon } from 'react-materialize';\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nclass ItemCard extends React.Component {\r\n\r\n    showCompleted = (isCompleted) =>{\r\n        if(isCompleted){\r\n            return (<div className='green-text' style={{position: 'absolute', left: '60%', top: '63%'}}>\r\n                    Completed\r\n                </div>)\r\n        }\r\n        else{\r\n            return (<div className='red-text' style={{position: 'absolute', left: '60%', top: '63%'}}>\r\n                Pending\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    buildDisableUpButton = () =>{\r\n        if(this.props.item.key == 0){\r\n            return (<Button className=\"buttons grey lighten-1 black-text\" id='upbb' onClick={this.up} disabled><strong className='textali'>&#x21e7;</strong></Button>)\r\n        }else{\r\n            return (<Button className=\"buttons indigo lighten-4 black-text\" id='upbb' onClick={this.up}><strong className='textali'>&#x21e7;</strong></Button>)\r\n        }\r\n    }\r\n    buildDisableDownButton = () => {\r\n        if(this.props.item.key == this.props.todoList.items.length-1){\r\n            return (<Button className=\"buttons grey lighten-1 black-text\" id='downbb' onClick={this.down} disabled><strong className='textali'>&#x21e9;</strong></Button>)\r\n        }else{\r\n            return(<Button className=\"buttons orange lighten-2 black-text\" id='downbb' onClick={this.down}><strong className='textali'>&#x21e9;</strong></Button>)\r\n        }\r\n    }\r\n\r\n    fixKey = (list) => {\r\n        for(let i = 0; i < list.length; i++){\r\n          list[i].key = i;\r\n        }\r\n    }\r\n\r\n    up = (e) =>{\r\n        let todoList = this.props.todoList;\r\n        let items = todoList.items;\r\n        let item = this.props.item;\r\n        let index = this.props.item.key;\r\n        items.splice(index, 1);\r\n        items.splice(index-1, 0, item);\r\n        this.fixKey(items);\r\n        e.preventDefault();\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            items: items\r\n        });\r\n    }\r\n    down = (e) =>{\r\n        let todoList = this.props.todoList;\r\n        let items = todoList.items;\r\n        let item = this.props.item;\r\n        let index = this.props.item.key;\r\n        items.splice(index, 1);\r\n        items.splice(index+1, 0, item);\r\n        this.fixKey(items);\r\n        e.preventDefault();\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            items: items\r\n        });\r\n    }\r\n    delete = (e) =>{\r\n        let todoList = this.props.todoList;\r\n        let items = todoList.items;\r\n        let item = this.props.item;\r\n        let index = this.props.item.key;\r\n        items.splice(index, 1);\r\n        this.fixKey(items);\r\n        e.preventDefault();\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            items: items\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;  \r\n        return (\r\n            <div className=\"card z-depth-0 todo-list-link green lighten-4\">\r\n                <div className=\"grey-text text-darken-3\">\r\n                    <div style={{overflow: 'hidden'}}>\r\n                        <span className=\"card-title\">{item.description}</span>\r\n                    </div>\r\n                    <div>\r\n                        Assigned To: <strong style={{fontWeight:'bold'}}>{item.assigned_to}</strong>\r\n                    </div>\r\n                    <div style={{position: 'absolute', left: '35%', top: '63%'}}>\r\n                        {item.due_date}\r\n                    </div>\r\n                    {this.showCompleted(item.completed)}\r\n\r\n                    {/* <div style={{position: 'absolute'}}>\r\n                        <Button\r\n                            floating\r\n                            fab={{direction: 'left'}}\r\n                            className=\"red\"\r\n                            style={{position:'relative', left: '1340%', top: '-50px'}}\r\n                        >\r\n                            <Button floating small className=\"red\" style={{right: '-30px'}} onClick={this.up}/>\r\n                            <Button floating small className=\"yellow darken-1\" style={{right: '-30px'}} onClick={this.down}/>\r\n                            <Button floating small className=\"green\" style={{right: '-30px'}} onClick={this.delete}/>\r\n                        </Button>\r\n                        \r\n                    </div> */}\r\n                    <nav className=\"contain\">\r\n                        <div className='hor'>\r\n                            \r\n                            {this.buildDisableUpButton()}\r\n                            {this.buildDisableDownButton()}                           \r\n                            <Button className=\"buttons black-text\" id='deletebb' onClick={this.delete}><strong className='textali'>&#10005;</strong></Button>\r\n\r\n                            <Button className=\"buttons bigsize light-green darken-3 black-text\"><strong className='textali'>&#9776;</strong></Button>\r\n                        </div>\r\n                        \r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ItemCard;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport ItemCard from './ItemCard';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Navbar, Button } from 'react-materialize';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFirestore } from 'redux-firestore';\r\n\r\nconst ItemSortCriteria = {\r\n    SORT_BY_TASK_INCREASING: \"sort_by_task_increasing\",\r\n    SORT_BY_TASK_DECREASING: \"sort_by_task_decreasing\",\r\n    SORT_BY_DUE_DATE_INCREASING: \"sort_by_due_date_increasing\",\r\n    SORT_BY_DUE_DATE_DECREASING: \"sort_by_due_date_decreasing\",\r\n    SORT_BY_STATUS_INCREASING: \"sort_by_status_increasing\",\r\n    SORT_BY_STATUS_DECREASING: \"sort_by_status_decreasing\"\r\n}\r\nclass ItemsList extends React.Component {\r\n    \r\n    fixKey = (list) => {\r\n        for(let i = 0; i < list.length; i++){\r\n          list[i].key = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method sorts the todo list items according to the provided sorting criteria.\r\n     * \r\n     * @param {ItemSortCriteria} sortingCriteria Sorting criteria to use.\r\n     */\r\n    sortTasks = (sortingCriteria) => {\r\n        let todoList = this.props.todoList;\r\n        todoList.currentItemSortCriteria = sortingCriteria;\r\n        todoList.items.sort(this.compare);\r\n        this.fixKey(todoList.items);\r\n        getFirestore().collection('todoLists').doc(todoList.id).update({\r\n            items: todoList.items\r\n        })\r\n    }\r\n\r\n    /**\r\n     * This method tests to see if the current sorting criteria is the same as the argument.\r\n     * \r\n     * @param {ItemSortCriteria} testCriteria Criteria to test for.\r\n     */\r\n    isCurrentItemSortCriteria = (testCriteria) => {\r\n        let todoList = this.props.todoList;\r\n        return todoList.currentItemSortCriteria === testCriteria;\r\n    }\r\n\r\n    /**\r\n     * This method compares two items for the purpose of sorting according to what\r\n     * is currently set as the current sorting criteria.\r\n     * \r\n     * @param {TodoListItem} item1 First item to compare.\r\n     * @param {TodoListItem} item2 Second item to compare.\r\n    */\r\n    compare = (item1, item2) => {\r\n\r\n        // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\r\n        if (this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING)\r\n            || this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_STATUS_DECREASING)\r\n            || this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING)) {\r\n            let temp = item1;\r\n            item1 = item2;\r\n            item2 = temp;\r\n        }\r\n        // SORT BY ITEM DESCRIPTION\r\n        if (this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_INCREASING)\r\n            || this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_DECREASING)) {\r\n            if (item1.description < item2.description)\r\n                return -1;\r\n            else if (item1.description > item2.description)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n        //sort by due dates\r\n        else if(this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING)\r\n            || this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING)){\r\n            if(item1.due_date == null && item2.due_date != null){\r\n                return -1;\r\n            }\r\n            else if(item2.due_date == null && item1.due_date != null){\r\n                return 1;\r\n            }\r\n            else if(item1.due_date == null && item2.due_date == null){\r\n                return 0;\r\n            }\r\n            else if(item1.due_date < item2.due_date)\r\n                return -1\r\n            else if(item1.due_date > item2.due_date)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n        // SORT BY COMPLETED\r\n        else {\r\n            if (item1.completed < item2.completed)\r\n                return -1;\r\n            else if (item1.completed > item2.completed)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    sortByTask = () =>{\r\n        // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\r\n        if (this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_TASK_INCREASING)) {\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_TASK_DECREASING);\r\n        }\r\n        // ALL OTHER CASES SORT BY INCREASING\r\n        else {\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_TASK_INCREASING);\r\n        }\r\n    }\r\n\r\n    sortByDuedate = () => {\r\n        if(this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING)){\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_DUE_DATE_DECREASING);\r\n        }\r\n        else{\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_DUE_DATE_INCREASING);\r\n        }\r\n    }\r\n\r\n    sortByStatus = () => {\r\n        // IF WE ARE CURRENTLY INCREASING BY STATUS SWITCH TO DECREASING\r\n        if (this.isCurrentItemSortCriteria(ItemSortCriteria.SORT_BY_STATUS_INCREASING)) {\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_STATUS_DECREASING);\r\n        }\r\n        // ALL OTHER CASES SORT BY INCRASING\r\n        else {\r\n            this.sortTasks(ItemSortCriteria.SORT_BY_STATUS_INCREASING);\r\n        }\r\n    }\r\n    render() {\r\n        const todoList = this.props.todoList;\r\n        const items = todoList.items;\r\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\r\n        return (\r\n            <div className=\"todo-lists section\">\r\n                <Navbar className=\"light-green lighten-3\">\r\n                    <div>\r\n                        <div className=\"black-text text-darken-2\" onClick={this.sortByTask} style={{position: \"absolute\", left: \"2%\", fontSize:'24pt', fontWeight:'bold', cursor:'pointer'}}>Task</div>\r\n                        <div className=\"black-text text-darken-2\" onClick={this.sortByDuedate} style={{position: \"absolute\", left: \"35%\",fontSize:'24pt', fontWeight:'bold', cursor:'pointer'}}>Due Date</div>\r\n                        <div className=\"black-text text-darken-2\" onClick={this.sortByStatus} style={{position: \"absolute\", left: \"60%\", fontSize:'24pt', fontWeight:'bold', cursor:'pointer'}}>Status</div>\r\n                    </div>\r\n                </Navbar>\r\n                {items && items.map(function(item) {\r\n                    //item.id = item.key;\r\n                    return (\r\n                        <Link to={'/todoList/'+todoList.id+'/'+item.key} key={item.key}>\r\n                            <ItemCard todoList={todoList} item={item}/>\r\n                        </Link>\r\n                    );})\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const todoList = ownProps.todoList;\r\n    return {\r\n        todoList,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'todoLists' ,orderBy: ['visited','desc']},\r\n    ]),\r\n)(ItemsList);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport ItemsList from './ItemsList.js'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport { Button,Modal } from 'react-materialize';\r\n\r\nclass ListScreen extends Component {\r\n    state = {\r\n        name: '',\r\n        owner: '',\r\n    }\r\n\r\n    moveListToTop = () =>{\r\n        const firestore = getFirestore();\r\n        firestore.collection('todoLists').doc(this.props.todoList.id).update({\r\n            visited: \"true\"\r\n        });\r\n        this.props.orderedTodo.map(todoList => {\r\n            if(todoList.id != this.props.todoList.id){\r\n                firestore.collection('todoLists').doc(todoList.id).update({\r\n                    visited: \"false\"\r\n                });\r\n            }\r\n        });      \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n        console.log('why')\r\n\r\n        this.setState(state => ({\r\n            ...state,\r\n            [target.id]: target.value,\r\n        }));\r\n        //const newChange = {...this.state}\r\n        //this.onChangeHandler(newChange);\r\n    }\r\n\r\n    onChangeName = (e) =>{\r\n        const { target } = e;\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            name: target.value,\r\n        })\r\n    }\r\n    onChangeOwner = (e) =>{\r\n        const { target } = e;\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            owner: target.value,\r\n        })\r\n    }\r\n\r\n    createNewItem = () =>{\r\n        this.props.history.push({pathname: '/todoList/' + this.props.todoList.id+'/-1'})\r\n    }\r\n\r\n    delete = () =>{\r\n        this.props.history.goBack();\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).delete();\r\n    }\r\n\r\n    render() {\r\n        const auth = this.props.auth;\r\n        const todoList = this.props.todoList;\r\n        console.log(\"render called\")\r\n        if(this.props.orderedTodo && this.props.todoList.visited == \"false\")\r\n            this.moveListToTop();\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (!todoList){\r\n            return <React.Fragment/>\r\n        }\r\n        return (\r\n            <div className='container' style={{width: '80%'}}>\r\n                <h4 className=\"grey-text text-darken-3\" style={{lineHeight:\"210%\"}}>Todo List</h4>\r\n                <Modal header=\"Delete list?\" trigger={<div id=\"list_trash\">&#128465;</div>}>\r\n                    <div>Are you sure you want to delete this list?</div>\r\n                    <br></br>\r\n                    <Button className='red darken-2 modal-close' waves=\"light\" onClick={this.delete}>Yes</Button>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div>The list will not be retreivable.</div>\r\n                </Modal>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\" className=\"active\">Name</label>\r\n                    <input className=\"active\" type=\"text\" name=\"name\" id=\"name\" onChange={this.onChangeName} value={todoList.name}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\" className=\"active\">Owner</label>\r\n                    <input className=\"active\" type=\"text\" name=\"owner\" id=\"owner\" onChange={this.onChangeOwner} value={todoList.owner} />\r\n                </div>\r\n                <ItemsList todoList={todoList} />\r\n                <div className=\"center-align\">\r\n                    <Button floating large className=\"red center-align\" waves=\"light\" onClick={this.createNewItem}>\r\n                        <strong style={{fontSize : 'x-large'}}>+</strong>\r\n                    </Button>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps.match.params;\r\n  const { todoLists } = state.firestore.data;\r\n  const todoList = todoLists ? todoLists[id] : null;\r\n  if(todoList)\r\n      todoList.id = id\r\n  return {\r\n    todoList,\r\n    orderedTodo: state.firestore.ordered.todoLists,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'todoLists' ,orderBy: ['visited','desc']},\r\n  ]),\r\n)(ListScreen);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport todoJson from './TestTodoListData.json'\r\nimport { getFirestore } from 'redux-firestore';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass DatabaseTester extends React.Component {\r\n\r\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\r\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\r\n    // TO LOG IN\r\n    handleClear = () => {\r\n        const fireStore = getFirestore();\r\n        fireStore.collection('todoLists').get().then(function(querySnapshot){\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(\"deleting \" + doc.id);\r\n                fireStore.collection('todoLists').doc(doc.id).delete();\r\n            })\r\n        });\r\n    }\r\n\r\n    handleReset = () => {\r\n        const fireStore = getFirestore();\r\n        todoJson.todoLists.forEach(todoListJson => {\r\n            fireStore.collection('todoLists').add({\r\n                    visited: \"false\",\r\n                    name: todoListJson.name,\r\n                    owner: todoListJson.owner,\r\n                    items: todoListJson.items\r\n                }).then(() => {\r\n                    console.log(\"DATABASE RESET\");\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleClear}>Clear Database</button>\r\n                <button onClick={this.handleReset}>Reset Database</button>\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        firebase: state.firebase\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DatabaseTester);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport { Checkbox, Button } from 'react-materialize';\r\n\r\nclass ItemScreen extends Component{\r\n\r\n    handleCancel = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n    handleSubmit = () => {\r\n        let items = this.props.todoList.items;\r\n        let item = this.props.item;\r\n        item.description = document.getElementById('Description').value;\r\n        if(item.description === \"\")\r\n            item.description = \"Unknown\";\r\n        item.assigned_to = document.getElementById('Assign_to').value;\r\n        if(item.assigned_to === \"\")\r\n            item.assigned_to = \"Unknown\";\r\n        item.due_date = document.getElementById('duedate').value;\r\n        item.completed = document.getElementById('checkbox').checked;\r\n        console.log(item.key);\r\n        if(item.key === -1){\r\n            items.push(item);\r\n            console.log(items);\r\n            item.key = items.length - 1;\r\n        }\r\n        this.props.history.goBack();\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            items: items\r\n        })\r\n        getFirestore().collection('todoLists').doc(this.props.todoList.id).update({\r\n            items: items\r\n        })\r\n    }\r\n\r\n    activeLabel = (name,content) =>{\r\n        if(content === \"\"){\r\n            return (<label htmlFor={name}>{name}</label>)\r\n        }else{\r\n            return(<label htmlFor={name} className=\"active\">{name}</label>)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { item } = this.props;\r\n        const auth = this.props.auth;\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (!item){\r\n            return <React.Fragment/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 style={{lineHeight:\"210%\"}}>Item</h4>\r\n                <div className=\"input-field\">\r\n                    {this.activeLabel('Description',item.description)}\r\n                    <input className=\"active\" type=\"text\" name=\"Description\" id=\"Description\" defaultValue={item.description}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    {this.activeLabel('Assign_to', item.assigned_to)}\r\n                    <input className=\"active\" type=\"text\" name=\"Assign_to\" id=\"Assign_to\" defaultValue={item.assigned_to}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"duedate\" className=\"active\">Due Date</label>\r\n                    <input type='date' className=\"active\" id=\"duedate\" name=\"duedate\" defaultValue={item.due_date}/>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <label>\r\n                        <input type=\"checkbox\" defaultChecked={item.completed} id='checkbox'/>\r\n                        <span>Completed</span>\r\n                    </label>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                <Button waves=\"light\" style={{marginRight: '5px'}} onClick={this.handleSubmit}>\r\n                    Submit\r\n                </Button>\r\n                <Button waves=\"light\" style={{marginRight: '5px'}} onClick={this.handleCancel}>\r\n                    Cancel\r\n                </Button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { id } = ownProps.match.params;\r\n    const { key } = ownProps.match.params;\r\n    const { todoLists } = state.firestore.data;\r\n    const todoList = todoLists ? todoLists[id] : null;\r\n    const newItem = {\r\n        description: \"\",\r\n        assigned_to: \"\",\r\n        due_date: \"\",\r\n        checked: false,\r\n        key: -1\r\n    }\r\n    const item = !todoList ? null : key==-1 ? newItem : todoList.items[key];\r\n    if(todoList)\r\n        todoList.id = id\r\n    return {\r\n        item,\r\n        todoList,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'todoLists' ,orderBy: ['visited','desc']},\r\n    ]),\r\n  )(ItemScreen);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\n\r\nimport Navbar from './components/navbar/Navbar.js';\r\nimport RegisterScreen from './components/register_screen/RegisterScreen.js';\r\nimport LoginScreen from './components/login_screen/LoginScreen.js';\r\nimport HomeScreen from './components/home_screen/HomeScreen.js';\r\nimport ListScreen from './components/list_screen/ListScreen.js';\r\nimport DatabaseTester from './test/DatabaseTester'\r\nimport ItemScreen from './components/item_screen/ItemScreen.js';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    // if auth is loaded then we render App.\r\n    // But if not then we doesn't render the one.\r\n    if (auth.isLoaded) {\r\n      return (\r\n        <BrowserRouter basename=\"/todo-list-firebase\">\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomeScreen} />\r\n              <Route path=\"/databaseTester\" component={DatabaseTester} />\r\n              <Route path=\"/register\" component={RegisterScreen} />\r\n              <Route path=\"/login\" component={LoginScreen} />\r\n              <Route path=\"/todoList/:id/:key\" component={ItemScreen} />\r\n              <Route path=\"/todoList/:id\" component={ListScreen} />\r\n              <Route path=\"/:any\" component={HomeScreen} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(App);","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\r\nimport firebase from '../config/firebaseConfig';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from '../App';\r\n\r\nclass ReactReduxFirebaseApp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // We enhance compose in order to use Redux DevTools extension\r\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\r\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\r\n        const rrfConfig = {\r\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\r\n            userProfile: 'users',\r\n            attachAuthIsReady: true,\r\n        };\r\n\r\n        const store = createStore(rootReducer,\r\n            composeEnhancers(\r\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\r\n            )\r\n        );\r\n\r\n        const rrfProps = {\r\n            firebase,\r\n            config: rrfConfig,\r\n            dispatch: store.dispatch,\r\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\r\n        };\r\n\r\n        this.state = {\r\n            store: store,\r\n            rrfProps: rrfProps\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={this.state.store}>\r\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\r\n                    <App />\r\n                </ReactReduxFirebaseProvider>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReactReduxFirebaseApp","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './css/todo_layout.css'\r\nimport './css/todo_style.css'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\r\n\r\nReactDOM.render(\r\n  <ReactReduxFirebaseApp />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}